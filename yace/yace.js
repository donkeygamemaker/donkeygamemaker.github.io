var e = { position: "relative", boxSizing: "border-box", overflow: "hidden", fontSize: "16px", fontFamily: 'Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace' },t = { lineHeight: "inherit", whiteSpace: "pre-wrap", wordBreak: "keep-all", background: "none", position: "absolute", width: "100%", height: "100%", zIndex: "1", resize: "none", caretColor: "black", padding: "inherit", outline: "none", fontSize: "inherit", fontFamily: "inherit", boxSizing: "border-box", border: "none", top: "0px", left: "0px", color: "inherit", overflow: "hidden", "-webkit-font-smoothing": "antialiased", "-webkit-text-fill-color": "transparent" },i = { lineHeight: "inherit", position: "relative", whiteSpace: "pre-wrap", wordBreak: "keep-all", padding: "0", width: "100%", margin: "0", pointerEvents: "none", boxSizing: "border-box", overflowWrap: "break-word", fontFamily: "inherit" },n = { lineHeight: "inherit", position: "absolute", width: "100%", height: "100%", whiteSpace: "pre-wrap", wordBreak: "keep-all", padding: "inherit", margin: "0", top: "0px", left: "0px", pointerEvents: "none", boxSizing: "border-box", overflowWrap: "break-word", fontFamily: "inherit" },o = function (e, t) {if (void 0 === t && (t = {}), !e) throw new Error("selector is not defined");if (this.root = e instanceof Node ? e : document.querySelector(e), !this.root) throw new Error('element with "' + e + '" selector is not exist');var i = { value: "", styles: {}, plugins: [], highlighter: function (e) {return a(e);} };this.options = Object.assign({}, i, t), this.init();};function r(e, t) {var i = t.target,n = i.value,o = i.selectionStart,r = i.selectionEnd;return e.reduce(function (e, i) {return Object.assign({}, e, i(e, t));}, { value: n, selectionStart: o, selectionEnd: r });}function a(e) {return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");}o.prototype.init = function () {this.textarea = document.createElement("textarea"), this.pre = document.createElement("pre"), Object.assign(this.root.style, e, this.options.styles), Object.assign(this.textarea.style, t), Object.assign(this.pre.style, i), this.root.appendChild(this.textarea), this.root.appendChild(this.pre), this.addTextareaEvents(), this.update({ value: this.options.value }), this.updateLines();}, o.prototype.addTextareaEvents = function () {var e = this;this.handleInput = function (t) {var i = r(e.options.plugins, t);e.update(i);}, this.handleKeydown = function (t) {var i = r(e.options.plugins, t);e.update(i);}, this.textarea.addEventListener("input", this.handleInput), this.textarea.addEventListener("keydown", this.handleKeydown);}, o.prototype.update = function (e) {var t = e.value,i = e.selectionStart,n = e.selectionEnd;if (null != t && (this.textarea.value = t), this.textarea.selectionStart = i, this.textarea.selectionEnd = n, t !== this.value && null != t) {this.value = t;var o = this.options.highlighter(t);this.pre.innerHTML = o + "<br/>", this.updateLines(), this.updateCallback && this.updateCallback(t);}}, o.prototype.updateLines = function () {if (this.options.lineNumbers) {this.lines || (this.lines = document.createElement("pre"), this.root.appendChild(this.lines), Object.assign(this.lines.style, n));var e = this.value.split("\n"),t = e.length.toString().length;this.root.style.paddingLeft = t + 1 + "ch", this.lines.innerHTML = e.map(function (e, t) {return "" + ('<span class="yace-line" style="position: absolute; opacity: .3; left: 0">' + (1 + t) + "</span>") + ('<span style="color: transparent; pointer-events: none">' + a(e) + "</span>");}).join("\n");}}, o.prototype.destroy = function () {this.textarea.removeEventListener("input", this.handleInput), this.textarea.removeEventListener("keydown", this.handleKeydown);}, o.prototype.onUpdate = function (e) {this.updateCallback = e;};export default o;
